-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Asset.Test.Util.Holding where

import DA.Assert ((===))
import DA.Map qualified as M (fromList)
import DA.Set (Set)
import Daml.Finance.Asset.Holding qualified as Holding (T, F, Factory(..))
import Daml.Finance.Interface.Asset.Util (getOwner)
import Daml.Finance.Interface.Common.Types (Parties)
import Daml.Script

-- | Create factory for `Holding`.
createFactory : Party -> [(Text, Set Parties)] -> Script (ContractId Holding.F)
createFactory provider observers = submitMulti [provider] [] do
  createCmd Holding.Factory with provider; observers = M.fromList observers

-- | Validate that a party is the owner of a holding.
validateOwnerOfHolding : [(Party, ContractId a)] -> Script [()]
validateOwnerOfHolding l = forA l
  \(owner, holdingCid) -> do
    Some holding <- queryContractId @Holding.T owner (coerceContractId holdingCid)
    getOwner holding === owner
